---
import Layout from "../layouts/Layout.astro";

// Obtener session ID de la URL
const sessionId = Astro.url.searchParams.get('session') || 'UNKNOWN';
---

<Layout title="Pujar fotos - Selectivitat AI">
  <main class="min-h-screen bg-gradient-to-b from-blue-600 to-blue-800 py-8 px-4">
    <div class="max-w-lg mx-auto">
      
      <!-- Header -->
      <div class="text-center mb-8">
        <div class="bg-white/20 backdrop-blur-md rounded-full px-6 py-3 inline-block mb-4">
          <span class="text-white font-bold text-lg">Sessió: {sessionId}</span>
        </div>
        <h1 class="text-3xl font-bold text-white mb-2">
          Fes fotos del teu examen
        </h1>
        <p class="text-blue-100">
          Les fotos es pujaran automàticament a l'ordinador
        </p>
      </div>

      <!-- Estado de conexión -->
      <div class="bg-white/10 backdrop-blur-md rounded-2xl p-4 mb-6" id="connection-status">
        <div class="flex items-center gap-3">
          <div class="w-3 h-3 bg-yellow-400 rounded-full animate-pulse"></div>
          <span class="text-white font-semibold">Connectant...</span>
        </div>
      </div>

      <!-- Botón de cámara grande -->
      <div class="bg-white rounded-3xl shadow-2xl p-8 mb-6">
        <button 
          id="camera-btn"
          class="w-full bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white rounded-2xl py-8 flex flex-col items-center justify-center gap-4 transition shadow-lg active:scale-95"
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="h-20 w-20" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z" />
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 13a3 3 0 11-6 0 3 3 0 016 0z" />
          </svg>
          <span class="text-2xl font-bold">Fer foto</span>
        </button>
        
        <!-- Input file oculto -->
        <input 
          type="file" 
          id="photo-input" 
          accept="image/*" 
          capture="environment"
          class="hidden"
        />

        <p class="text-center text-sm text-gray-500 mt-4">
          Cada vegada que facis una foto, es pujarà automàticament
        </p>
      </div>

      <!-- Fotos subidas -->
      <div class="bg-white rounded-2xl shadow-xl p-6">
        <div class="flex items-center justify-between mb-4">
          <h3 class="text-lg font-bold text-gray-900">Fotos pujades</h3>
          <span class="bg-blue-600 text-white px-4 py-1 rounded-full font-bold" id="photo-counter">0</span>
        </div>
        
        <div id="photos-grid" class="grid grid-cols-3 gap-3 mb-4">
          <!-- Las fotos aparecerán aquí -->
        </div>

        <div id="empty-state" class="text-center py-8 text-gray-400">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 mx-auto mb-3 opacity-50" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
          </svg>
          <p class="text-sm">Encara no hi ha fotos</p>
        </div>
      </div>

      <!-- Instrucciones -->
      <div class="bg-white/10 backdrop-blur-md rounded-2xl p-6 mt-6">
        <h3 class="text-white font-bold mb-3 flex items-center gap-2">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
          </svg>
          Consells:
        </h3>
        <ul class="text-blue-100 text-sm space-y-2">
          <li class="flex items-start gap-2">
            <span class="text-yellow-400">✓</span>
            <span>Fes la foto des de dalt, paral·lel al paper</span>
          </li>
          <li class="flex items-start gap-2">
            <span class="text-yellow-400">✓</span>
            <span>Assegura't que hi ha bona il·luminació</span>
          </li>
          <li class="flex items-start gap-2">
            <span class="text-yellow-400">✓</span>
            <span>El text ha de ser completament llegible</span>
          </li>
          <li class="flex items-start gap-2">
            <span class="text-yellow-400">✓</span>
            <span>Fotografía cada pàgina de l'examen</span>
          </li>
        </ul>
      </div>

      <!-- Botón finalizar -->
      <button 
        id="finish-btn"
        class="w-full bg-green-600 hover:bg-green-700 text-white font-bold py-4 rounded-xl mt-6 transition shadow-lg disabled:bg-gray-400 disabled:cursor-not-allowed"
        disabled
      >
        Finalitzar i processar (<span id="btn-counter">0</span> fotos)
      </button>

    </div>
  </main>

  <script define:vars={{ sessionId }}>
    let uploadedPhotos = [];
    let isConnected = false;

    // Elementos del DOM
    const cameraBtn = document.getElementById('camera-btn');
    const photoInput = document.getElementById('photo-input');
    const photosGrid = document.getElementById('photos-grid');
    const emptyState = document.getElementById('empty-state');
    const photoCounter = document.getElementById('photo-counter');
    const btnCounter = document.getElementById('btn-counter');
    const finishBtn = document.getElementById('finish-btn');
    const connectionStatus = document.getElementById('connection-status');

    // Simular conexión WebSocket
    setTimeout(() => {
      isConnected = true;
      if (connectionStatus) {
        connectionStatus.innerHTML = `
          <div class="flex items-center gap-3">
            <div class="w-3 h-3 bg-green-400 rounded-full animate-pulse"></div>
            <span class="text-white font-semibold">✓ Connectat a l'ordinador</span>
          </div>
        `;
      }
    }, 1500);

    // Click en botón de cámara
    cameraBtn?.addEventListener('click', () => {
      photoInput?.click();
    });

    // Cuando se selecciona una foto
    photoInput?.addEventListener('change', async (e) => {
      const file = e.target.files?.[0];
      if (!file) return;

      // Mostrar loading
      showUploadingState();

      // Simular subida (en producción enviar a servidor/WebSocket)
      await simulateUpload(file);

      // Añadir a la lista
      uploadedPhotos.push(file);
      updatePhotosList();

      // Reset input
      photoInput.value = '';
    });

    function showUploadingState() {
      const loadingDiv = document.createElement('div');
      loadingDiv.id = 'uploading-indicator';
      loadingDiv.className = 'fixed top-4 left-1/2 transform -translate-x-1/2 bg-white rounded-full px-6 py-3 shadow-xl z-50';
      loadingDiv.innerHTML = `
        <div class="flex items-center gap-3">
          <div class="animate-spin rounded-full h-5 w-5 border-2 border-blue-600 border-t-transparent"></div>
          <span class="font-semibold text-gray-900">Pujant foto...</span>
        </div>
      `;
      document.body.appendChild(loadingDiv);
    }

    async function simulateUpload(file) {
      // Simular tiempo de subida
      await new Promise(resolve => setTimeout(resolve, 1500));
      
      // Remover indicador de carga
      const indicator = document.getElementById('uploading-indicator');
      if (indicator) {
        indicator.remove();
      }

      // Mostrar éxito
      showSuccessToast();
    }

    function showSuccessToast() {
      const toast = document.createElement('div');
      toast.className = 'fixed top-4 left-1/2 transform -translate-x-1/2 bg-green-600 text-white rounded-full px-6 py-3 shadow-xl z-50 animate-bounce';
      toast.innerHTML = `
        <div class="flex items-center gap-2">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
          </svg>
          <span class="font-semibold">Foto pujada!</span>
        </div>
      `;
      document.body.appendChild(toast);

      setTimeout(() => toast.remove(), 2000);
    }

    function updatePhotosList() {
      const count = uploadedPhotos.length;
      
      if (photoCounter) photoCounter.textContent = count;
      if (btnCounter) btnCounter.textContent = count;
      
      if (finishBtn) {
        finishBtn.disabled = count === 0;
      }

      if (emptyState) {
        emptyState.style.display = count === 0 ? 'block' : 'none';
      }

      if (photosGrid) {
        photosGrid.innerHTML = uploadedPhotos.map((file, index) => `
          <div class="relative group">
            <div class="aspect-square bg-gradient-to-br from-green-100 to-green-200 rounded-lg border-2 border-green-400 flex items-center justify-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
            <div class="absolute -top-2 -right-2 bg-green-600 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs font-bold shadow-lg">
              ${index + 1}
            </div>
          </div>
        `).join('');
      }
    }

    // Botón finalizar
    finishBtn?.addEventListener('click', () => {
      // Mostrar mensaje de éxito
      const successDiv = document.createElement('div');
      successDiv.className = 'fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4';
      successDiv.innerHTML = `
        <div class="bg-white rounded-2xl p-8 max-w-sm text-center animate-bounce">
          <div class="w-20 h-20 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </div>
          <h2 class="text-2xl font-bold text-gray-900 mb-2">Fotos enviades!</h2>
          <p class="text-gray-600 mb-4">Torna a l'ordinador per veure els resultats</p>
          <p class="text-sm text-gray-500">Pots tancar aquesta pàgina</p>
        </div>
      `;
      document.body.appendChild(successDiv);

      // En producción: Enviar señal al servidor para procesar
      console.log('Finalizando sesión:', sessionId);
    });
  </script>

  <style>
    @keyframes bounce {
      0%, 100% {
        transform: translateY(0);
      }
      50% {
        transform: translateY(-10px);
      }
    }
    
    .animate-bounce {
      animation: bounce 0.5s ease-in-out;
    }
  </style>
</Layout>
